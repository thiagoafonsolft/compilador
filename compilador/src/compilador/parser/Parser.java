/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.parser;

import compilador.lexer.*;
import compilador.node.*;
import compilador.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPrograma node1 = (PPrograma) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AAprograma1Programa */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce AAprograma2Programa */
            {
                ArrayList<Object> list = new1();
                push(goTo(0), list, false);
            }
            break;
            case 2: /* reduce AAprograma3Programa */
            {
                ArrayList<Object> list = new2();
                push(goTo(0), list, false);
            }
            break;
            case 3: /* reduce AAprograma4Programa */
            {
                ArrayList<Object> list = new3();
                push(goTo(0), list, false);
            }
            break;
            case 4: /* reduce AProgramaInicio */
            {
                ArrayList<Object> list = new4();
                push(goTo(1), list, false);
            }
            break;
            case 5: /* reduce ADecListaDeclaracaoLista */
            {
                ArrayList<Object> list = new5();
                push(goTo(2), list, false);
            }
            break;
            case 6: /* reduce ADeclaracaoDeclaracaoLista */
            {
                ArrayList<Object> list = new6();
                push(goTo(2), list, false);
            }
            break;
            case 7: /* reduce AComListaComandoLista */
            {
                ArrayList<Object> list = new7();
                push(goTo(3), list, false);
            }
            break;
            case 8: /* reduce AComandoComandoLista */
            {
                ArrayList<Object> list = new8();
                push(goTo(3), list, false);
            }
            break;
            case 9: /* reduce AAtipodeclaracao1Declaracao */
            {
                ArrayList<Object> list = new9();
                push(goTo(4), list, false);
            }
            break;
            case 10: /* reduce AAtipodeclaracao2Declaracao */
            {
                ArrayList<Object> list = new10();
                push(goTo(4), list, false);
            }
            break;
            case 11: /* reduce AConstDeclaracao */
            {
                ArrayList<Object> list = new11();
                push(goTo(4), list, false);
            }
            break;
            case 12: /* reduce ARealTipo */
            {
                ArrayList<Object> list = new12();
                push(goTo(5), list, false);
            }
            break;
            case 13: /* reduce AInteiroTipo */
            {
                ArrayList<Object> list = new13();
                push(goTo(5), list, false);
            }
            break;
            case 14: /* reduce ACaractereTipo */
            {
                ArrayList<Object> list = new14();
                push(goTo(5), list, false);
            }
            break;
            case 15: /* reduce AIdVar */
            {
                ArrayList<Object> list = new15();
                push(goTo(6), list, false);
            }
            break;
            case 16: /* reduce AVetorVar */
            {
                ArrayList<Object> list = new16();
                push(goTo(6), list, false);
            }
            break;
            case 17: /* reduce AVirgulaListaVarVirgulaLista */
            {
                ArrayList<Object> list = new17();
                push(goTo(7), list, false);
            }
            break;
            case 18: /* reduce AVarVirgulaVarVirgulaLista */
            {
                ArrayList<Object> list = new18();
                push(goTo(7), list, false);
            }
            break;
            case 19: /* reduce AVarVirgula */
            {
                ArrayList<Object> list = new19();
                push(goTo(8), list, false);
            }
            break;
            case 20: /* reduce AStringValor */
            {
                ArrayList<Object> list = new20();
                push(goTo(9), list, false);
            }
            break;
            case 21: /* reduce ANRealValor */
            {
                ArrayList<Object> list = new21();
                push(goTo(9), list, false);
            }
            break;
            case 22: /* reduce ANInteiroValor */
            {
                ArrayList<Object> list = new22();
                push(goTo(9), list, false);
            }
            break;
            case 23: /* reduce AAtribuicaoComando */
            {
                ArrayList<Object> list = new23();
                push(goTo(10), list, false);
            }
            break;
            case 24: /* reduce AAleiacomando1Comando */
            {
                ArrayList<Object> list = new24();
                push(goTo(10), list, false);
            }
            break;
            case 25: /* reduce AAleiacomando2Comando */
            {
                ArrayList<Object> list = new25();
                push(goTo(10), list, false);
            }
            break;
            case 26: /* reduce AAescrevacomando1Comando */
            {
                ArrayList<Object> list = new26();
                push(goTo(10), list, false);
            }
            break;
            case 27: /* reduce AAescrevacomando2Comando */
            {
                ArrayList<Object> list = new27();
                push(goTo(10), list, false);
            }
            break;
            case 28: /* reduce AAsecomando1Comando */
            {
                ArrayList<Object> list = new28();
                push(goTo(10), list, false);
            }
            break;
            case 29: /* reduce AAsecomando2Comando */
            {
                ArrayList<Object> list = new29();
                push(goTo(10), list, false);
            }
            break;
            case 30: /* reduce AAavaliecomando1Comando */
            {
                ArrayList<Object> list = new30();
                push(goTo(10), list, false);
            }
            break;
            case 31: /* reduce AAavaliecomando2Comando */
            {
                ArrayList<Object> list = new31();
                push(goTo(10), list, false);
            }
            break;
            case 32: /* reduce AAavaliecomando3Comando */
            {
                ArrayList<Object> list = new32();
                push(goTo(10), list, false);
            }
            break;
            case 33: /* reduce AAavaliecomando4Comando */
            {
                ArrayList<Object> list = new33();
                push(goTo(10), list, false);
            }
            break;
            case 34: /* reduce AEnquantoComando */
            {
                ArrayList<Object> list = new34();
                push(goTo(10), list, false);
            }
            break;
            case 35: /* reduce ARepitaComando */
            {
                ArrayList<Object> list = new35();
                push(goTo(10), list, false);
            }
            break;
            case 36: /* reduce AParaComando */
            {
                ArrayList<Object> list = new36();
                push(goTo(10), list, false);
            }
            break;
            case 37: /* reduce APassoComando */
            {
                ArrayList<Object> list = new37();
                push(goTo(10), list, false);
            }
            break;
            case 38: /* reduce AListaComandoOpLista */
            {
                ArrayList<Object> list = new38();
                push(goTo(11), list, false);
            }
            break;
            case 39: /* reduce AComandoComandoOpLista */
            {
                ArrayList<Object> list = new39();
                push(goTo(11), list, false);
            }
            break;
            case 40: /* reduce ASenaoComando */
            {
                ArrayList<Object> list = new40();
                push(goTo(12), list, false);
            }
            break;
            case 41: /* reduce ASenaoDoispontos */
            {
                ArrayList<Object> list = new41();
                push(goTo(13), list, false);
            }
            break;
            case 42: /* reduce ACasoValorListaCasoValorLista */
            {
                ArrayList<Object> list = new42();
                push(goTo(14), list, false);
            }
            break;
            case 43: /* reduce ACasoValorCasoValorLista */
            {
                ArrayList<Object> list = new43();
                push(goTo(14), list, false);
            }
            break;
            case 44: /* reduce ACasoValor */
            {
                ArrayList<Object> list = new44();
                push(goTo(15), list, false);
            }
            break;
            case 45: /* reduce AParaInicio */
            {
                ArrayList<Object> list = new45();
                push(goTo(16), list, false);
            }
            break;
            case 46: /* reduce AParaFim */
            {
                ArrayList<Object> list = new46();
                push(goTo(17), list, false);
            }
            break;
            case 47: /* reduce AListaExpViruglaLista */
            {
                ArrayList<Object> list = new47();
                push(goTo(18), list, false);
            }
            break;
            case 48: /* reduce AExpVirgulaExpViruglaLista */
            {
                ArrayList<Object> list = new48();
                push(goTo(18), list, false);
            }
            break;
            case 49: /* reduce AExpVirgula */
            {
                ArrayList<Object> list = new49();
                push(goTo(19), list, false);
            }
            break;
            case 50: /* reduce AExp */
            {
                ArrayList<Object> list = new50();
                push(goTo(20), list, false);
            }
            break;
            case 51: /* reduce ASomaSomaExp */
            {
                ArrayList<Object> list = new51();
                push(goTo(21), list, false);
            }
            break;
            case 52: /* reduce AProxSomaExp */
            {
                ArrayList<Object> list = new52();
                push(goTo(21), list, false);
            }
            break;
            case 53: /* reduce AMultTermo */
            {
                ArrayList<Object> list = new53();
                push(goTo(22), list, false);
            }
            break;
            case 54: /* reduce AProxTermo */
            {
                ArrayList<Object> list = new54();
                push(goTo(22), list, false);
            }
            break;
            case 55: /* reduce ANegNegar */
            {
                ArrayList<Object> list = new55();
                push(goTo(23), list, false);
            }
            break;
            case 56: /* reduce AFatorexpNegar */
            {
                ArrayList<Object> list = new56();
                push(goTo(23), list, false);
            }
            break;
            case 57: /* reduce AExpFator */
            {
                ArrayList<Object> list = new57();
                push(goTo(24), list, false);
            }
            break;
            case 58: /* reduce AValorFator */
            {
                ArrayList<Object> list = new58();
                push(goTo(24), list, false);
            }
            break;
            case 59: /* reduce AVarFator */
            {
                ArrayList<Object> list = new59();
                push(goTo(24), list, false);
            }
            break;
            case 60: /* reduce ALogXorLogicaOu */
            {
                ArrayList<Object> list = new60();
                push(goTo(25), list, false);
            }
            break;
            case 61: /* reduce ALogOuLogicaOu */
            {
                ArrayList<Object> list = new61();
                push(goTo(25), list, false);
            }
            break;
            case 62: /* reduce ALogELogicaXor */
            {
                ArrayList<Object> list = new62();
                push(goTo(26), list, false);
            }
            break;
            case 63: /* reduce ALogXorLogicaXor */
            {
                ArrayList<Object> list = new63();
                push(goTo(26), list, false);
            }
            break;
            case 64: /* reduce ALogIgualdadeLogicaE */
            {
                ArrayList<Object> list = new64();
                push(goTo(27), list, false);
            }
            break;
            case 65: /* reduce ALogELogicaE */
            {
                ArrayList<Object> list = new65();
                push(goTo(27), list, false);
            }
            break;
            case 66: /* reduce ALogmaiorLogicaIgualdade */
            {
                ArrayList<Object> list = new66();
                push(goTo(28), list, false);
            }
            break;
            case 67: /* reduce ALogigualLogicaIgualdade */
            {
                ArrayList<Object> list = new67();
                push(goTo(28), list, false);
            }
            break;
            case 68: /* reduce ALogmenorLogicaMaior */
            {
                ArrayList<Object> list = new68();
                push(goTo(29), list, false);
            }
            break;
            case 69: /* reduce ALogmaiorLogicaMaior */
            {
                ArrayList<Object> list = new69();
                push(goTo(29), list, false);
            }
            break;
            case 70: /* reduce ASomaLogicaMenor */
            {
                ArrayList<Object> list = new70();
                push(goTo(30), list, false);
            }
            break;
            case 71: /* reduce ALogmenorLogicaMenor */
            {
                ArrayList<Object> list = new71();
                push(goTo(30), list, false);
            }
            break;
            case 72: /* reduce AMultiplicacaoMult */
            {
                ArrayList<Object> list = new72();
                push(goTo(31), list, false);
            }
            break;
            case 73: /* reduce ADivisaoMult */
            {
                ArrayList<Object> list = new73();
                push(goTo(31), list, false);
            }
            break;
            case 74: /* reduce AAdicaoSoma */
            {
                ArrayList<Object> list = new74();
                push(goTo(32), list, false);
            }
            break;
            case 75: /* reduce ASubtracaoSoma */
            {
                ArrayList<Object> list = new75();
                push(goTo(32), list, false);
            }
            break;
            case 76: /* reduce AMenorigualRelacionalMenor */
            {
                ArrayList<Object> list = new76();
                push(goTo(33), list, false);
            }
            break;
            case 77: /* reduce AMenorRelacionalMenor */
            {
                ArrayList<Object> list = new77();
                push(goTo(33), list, false);
            }
            break;
            case 78: /* reduce AMaiorigualRelacionalMaior */
            {
                ArrayList<Object> list = new78();
                push(goTo(34), list, false);
            }
            break;
            case 79: /* reduce AMaiorRelacionalMaior */
            {
                ArrayList<Object> list = new79();
                push(goTo(34), list, false);
            }
            break;
            case 80: /* reduce AIgualIgualdade */
            {
                ArrayList<Object> list = new80();
                push(goTo(35), list, false);
            }
            break;
            case 81: /* reduce ADiferenteIgualdade */
            {
                ArrayList<Object> list = new81();
                push(goTo(35), list, false);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AAprograma1Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        PProgramaInicio pprogramainicioNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        @SuppressWarnings("unused") Object nullNode4 = null;
        TFimPrograma tfimprogramaNode5;
        pprogramainicioNode2 = (PProgramaInicio)nodeArrayList1.get(0);
        tfimprogramaNode5 = (TFimPrograma)nodeArrayList2.get(0);

        pprogramaNode1 = new APrograma(pprogramainicioNode2, null, null, tfimprogramaNode5);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AAprograma2Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        PProgramaInicio pprogramainicioNode2;
        PDeclaracaoLista pdeclaracaolistaNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        TFimPrograma tfimprogramaNode5;
        pprogramainicioNode2 = (PProgramaInicio)nodeArrayList1.get(0);
        pdeclaracaolistaNode3 = (PDeclaracaoLista)nodeArrayList2.get(0);
        tfimprogramaNode5 = (TFimPrograma)nodeArrayList3.get(0);

        pprogramaNode1 = new APrograma(pprogramainicioNode2, pdeclaracaolistaNode3, null, tfimprogramaNode5);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AAprograma3Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        PProgramaInicio pprogramainicioNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PComandoLista pcomandolistaNode4;
        TFimPrograma tfimprogramaNode5;
        pprogramainicioNode2 = (PProgramaInicio)nodeArrayList1.get(0);
        pcomandolistaNode4 = (PComandoLista)nodeArrayList2.get(0);
        tfimprogramaNode5 = (TFimPrograma)nodeArrayList3.get(0);

        pprogramaNode1 = new APrograma(pprogramainicioNode2, null, pcomandolistaNode4, tfimprogramaNode5);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AAprograma4Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        PProgramaInicio pprogramainicioNode2;
        PDeclaracaoLista pdeclaracaolistaNode3;
        PComandoLista pcomandolistaNode4;
        TFimPrograma tfimprogramaNode5;
        pprogramainicioNode2 = (PProgramaInicio)nodeArrayList1.get(0);
        pdeclaracaolistaNode3 = (PDeclaracaoLista)nodeArrayList2.get(0);
        pcomandolistaNode4 = (PComandoLista)nodeArrayList3.get(0);
        tfimprogramaNode5 = (TFimPrograma)nodeArrayList4.get(0);

        pprogramaNode1 = new APrograma(pprogramainicioNode2, pdeclaracaolistaNode3, pcomandolistaNode4, tfimprogramaNode5);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AProgramaInicio */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramaInicio pprogramainicioNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TId tidNode3;
        TInicio tinicioNode4;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tinicioNode4 = (TInicio)nodeArrayList3.get(0);

        pprogramainicioNode1 = new AProgramaInicio(tprogramaNode2, tidNode3, tinicioNode4);
        }
	nodeList.add(pprogramainicioNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce ADecListaDeclaracaoLista */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoLista pdeclaracaolistaNode1;
        {
            // Block
        PDeclaracaoLista pdeclaracaolistaNode2;
        PDeclaracao pdeclaracaoNode3;
        pdeclaracaolistaNode2 = (PDeclaracaoLista)nodeArrayList1.get(0);
        pdeclaracaoNode3 = (PDeclaracao)nodeArrayList2.get(0);

        pdeclaracaolistaNode1 = new ADecListaDeclaracaoLista(pdeclaracaolistaNode2, pdeclaracaoNode3);
        }
	nodeList.add(pdeclaracaolistaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce ADeclaracaoDeclaracaoLista */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoLista pdeclaracaolistaNode1;
        {
            // Block
        PDeclaracao pdeclaracaoNode2;
        pdeclaracaoNode2 = (PDeclaracao)nodeArrayList1.get(0);

        pdeclaracaolistaNode1 = new ADeclaracaoDeclaracaoLista(pdeclaracaoNode2);
        }
	nodeList.add(pdeclaracaolistaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AComListaComandoLista */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoLista pcomandolistaNode1;
        {
            // Block
        PComandoLista pcomandolistaNode2;
        PComando pcomandoNode3;
        pcomandolistaNode2 = (PComandoLista)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);

        pcomandolistaNode1 = new AComListaComandoLista(pcomandolistaNode2, pcomandoNode3);
        }
	nodeList.add(pcomandolistaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AComandoComandoLista */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoLista pcomandolistaNode1;
        {
            // Block
        PComando pcomandoNode2;
        pcomandoNode2 = (PComando)nodeArrayList1.get(0);

        pcomandolistaNode1 = new AComandoComandoLista(pcomandoNode2);
        }
	nodeList.add(pcomandolistaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AAtipodeclaracao1Declaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoispontos tdoispontosNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PVar pvarNode5;
        TPontovirgula tpontovirgulaNode6;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoispontos)nodeArrayList2.get(0);
        pvarNode5 = (PVar)nodeArrayList3.get(0);
        tpontovirgulaNode6 = (TPontovirgula)nodeArrayList4.get(0);

        pdeclaracaoNode1 = new ATipoDeclaracao(ptipoNode2, tdoispontosNode3, null, pvarNode5, tpontovirgulaNode6);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AAtipodeclaracao2Declaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoispontos tdoispontosNode3;
        PVarVirgulaLista pvarvirgulalistaNode4;
        PVar pvarNode5;
        TPontovirgula tpontovirgulaNode6;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoispontos)nodeArrayList2.get(0);
        pvarvirgulalistaNode4 = (PVarVirgulaLista)nodeArrayList3.get(0);
        pvarNode5 = (PVar)nodeArrayList4.get(0);
        tpontovirgulaNode6 = (TPontovirgula)nodeArrayList5.get(0);

        pdeclaracaoNode1 = new ATipoDeclaracao(ptipoNode2, tdoispontosNode3, pvarvirgulalistaNode4, pvarNode5, tpontovirgulaNode6);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AConstDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        TConst tconstNode2;
        TId tidNode3;
        PValor pvalorNode4;
        TPontovirgula tpontovirgulaNode5;
        tconstNode2 = (TConst)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontovirgula)nodeArrayList4.get(0);

        pdeclaracaoNode1 = new AConstDeclaracao(tconstNode2, tidNode3, pvalorNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce ARealTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        ptipoNode1 = new ARealTipo(trealNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AInteiroTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        ptipoNode1 = new AInteiroTipo(tinteiroNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce ACaractereTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TCaractere tcaractereNode2;
        tcaractereNode2 = (TCaractere)nodeArrayList1.get(0);

        ptipoNode1 = new ACaractereTipo(tcaractereNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AIdVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pvarNode1 = new AIdVar(tidNode2);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AVetorVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TId tidNode2;
        TAbrecolchete tabrecolcheteNode3;
        TNInteiro tninteiroNode4;
        TFechacolchete tfechacolcheteNode5;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tabrecolcheteNode3 = (TAbrecolchete)nodeArrayList2.get(0);
        tninteiroNode4 = (TNInteiro)nodeArrayList3.get(0);
        tfechacolcheteNode5 = (TFechacolchete)nodeArrayList4.get(0);

        pvarNode1 = new AVetorVar(tidNode2, tabrecolcheteNode3, tninteiroNode4, tfechacolcheteNode5);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AVirgulaListaVarVirgulaLista */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarVirgulaLista pvarvirgulalistaNode1;
        {
            // Block
        PVarVirgulaLista pvarvirgulalistaNode2;
        PVarVirgula pvarvirgulaNode3;
        pvarvirgulalistaNode2 = (PVarVirgulaLista)nodeArrayList1.get(0);
        pvarvirgulaNode3 = (PVarVirgula)nodeArrayList2.get(0);

        pvarvirgulalistaNode1 = new AVirgulaListaVarVirgulaLista(pvarvirgulalistaNode2, pvarvirgulaNode3);
        }
	nodeList.add(pvarvirgulalistaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AVarVirgulaVarVirgulaLista */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarVirgulaLista pvarvirgulalistaNode1;
        {
            // Block
        PVarVirgula pvarvirgulaNode2;
        pvarvirgulaNode2 = (PVarVirgula)nodeArrayList1.get(0);

        pvarvirgulalistaNode1 = new AVarVirgulaVarVirgulaLista(pvarvirgulaNode2);
        }
	nodeList.add(pvarvirgulalistaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AVarVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarVirgula pvarvirgulaNode1;
        {
            // Block
        PVar pvarNode2;
        TVirgula tvirgulaNode3;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);

        pvarvirgulaNode1 = new AVarVirgula(pvarNode2, tvirgulaNode3);
        }
	nodeList.add(pvarvirgulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AStringValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pvalorNode1 = new AStringValor(tstringNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce ANRealValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNReal tnrealNode2;
        tnrealNode2 = (TNReal)nodeArrayList1.get(0);

        pvalorNode1 = new ANRealValor(tnrealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce ANInteiroValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNInteiro tninteiroNode2;
        tninteiroNode2 = (TNInteiro)nodeArrayList1.get(0);

        pvalorNode1 = new ANInteiroValor(tninteiroNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AAtribuicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PVar pvarNode2;
        TAtribuicao tatribuicaoNode3;
        PExp pexpNode4;
        TPontovirgula tpontovirgulaNode5;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontovirgula)nodeArrayList4.get(0);

        pcomandoNode1 = new AAtribuicaoComando(pvarNode2, tatribuicaoNode3, pexpNode4, tpontovirgulaNode5);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AAleiacomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TLeia tleiaNode2;
        TAbreparentese tabreparenteseNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PVar pvarNode5;
        TFechaparentese tfechaparenteseNode6;
        TPontovirgula tpontovirgulaNode7;
        tleiaNode2 = (TLeia)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreparentese)nodeArrayList2.get(0);
        pvarNode5 = (PVar)nodeArrayList3.get(0);
        tfechaparenteseNode6 = (TFechaparentese)nodeArrayList4.get(0);
        tpontovirgulaNode7 = (TPontovirgula)nodeArrayList5.get(0);

        pcomandoNode1 = new ALeiaComando(tleiaNode2, tabreparenteseNode3, null, pvarNode5, tfechaparenteseNode6, tpontovirgulaNode7);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AAleiacomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TLeia tleiaNode2;
        TAbreparentese tabreparenteseNode3;
        PVarVirgulaLista pvarvirgulalistaNode4;
        PVar pvarNode5;
        TFechaparentese tfechaparenteseNode6;
        TPontovirgula tpontovirgulaNode7;
        tleiaNode2 = (TLeia)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreparentese)nodeArrayList2.get(0);
        pvarvirgulalistaNode4 = (PVarVirgulaLista)nodeArrayList3.get(0);
        pvarNode5 = (PVar)nodeArrayList4.get(0);
        tfechaparenteseNode6 = (TFechaparentese)nodeArrayList5.get(0);
        tpontovirgulaNode7 = (TPontovirgula)nodeArrayList6.get(0);

        pcomandoNode1 = new ALeiaComando(tleiaNode2, tabreparenteseNode3, pvarvirgulalistaNode4, pvarNode5, tfechaparenteseNode6, tpontovirgulaNode7);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AAescrevacomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TAbreparentese tabreparenteseNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PExp pexpNode5;
        TFechaparentese tfechaparenteseNode6;
        TPontovirgula tpontovirgulaNode7;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreparentese)nodeArrayList2.get(0);
        pexpNode5 = (PExp)nodeArrayList3.get(0);
        tfechaparenteseNode6 = (TFechaparentese)nodeArrayList4.get(0);
        tpontovirgulaNode7 = (TPontovirgula)nodeArrayList5.get(0);

        pcomandoNode1 = new AEscrevaComando(tescrevaNode2, tabreparenteseNode3, null, pexpNode5, tfechaparenteseNode6, tpontovirgulaNode7);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AAescrevacomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TAbreparentese tabreparenteseNode3;
        PExpViruglaLista pexpviruglalistaNode4;
        PExp pexpNode5;
        TFechaparentese tfechaparenteseNode6;
        TPontovirgula tpontovirgulaNode7;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreparentese)nodeArrayList2.get(0);
        pexpviruglalistaNode4 = (PExpViruglaLista)nodeArrayList3.get(0);
        pexpNode5 = (PExp)nodeArrayList4.get(0);
        tfechaparenteseNode6 = (TFechaparentese)nodeArrayList5.get(0);
        tpontovirgulaNode7 = (TPontovirgula)nodeArrayList6.get(0);

        pcomandoNode1 = new AEscrevaComando(tescrevaNode2, tabreparenteseNode3, pexpviruglalistaNode4, pexpNode5, tfechaparenteseNode6, tpontovirgulaNode7);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AAsecomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TSe tseNode2;
        TAbreparentese tabreparenteseNode3;
        PExp pexpNode4;
        TFechaparentese tfechaparenteseNode5;
        TEntao tentaoNode6;
        PComandoOpLista pcomandooplistaNode7;
        @SuppressWarnings("unused") Object nullNode8 = null;
        TFimse tfimseNode9;
        TPontovirgula tpontovirgulaNode10;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreparentese)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaparentese)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pcomandooplistaNode7 = (PComandoOpLista)nodeArrayList6.get(0);
        tfimseNode9 = (TFimse)nodeArrayList7.get(0);
        tpontovirgulaNode10 = (TPontovirgula)nodeArrayList8.get(0);

        pcomandoNode1 = new ASeComando(tseNode2, tabreparenteseNode3, pexpNode4, tfechaparenteseNode5, tentaoNode6, pcomandooplistaNode7, null, tfimseNode9, tpontovirgulaNode10);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AAsecomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TSe tseNode2;
        TAbreparentese tabreparenteseNode3;
        PExp pexpNode4;
        TFechaparentese tfechaparenteseNode5;
        TEntao tentaoNode6;
        PComandoOpLista pcomandooplistaNode7;
        PSenaoComando psenaocomandoNode8;
        TFimse tfimseNode9;
        TPontovirgula tpontovirgulaNode10;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreparentese)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaparentese)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pcomandooplistaNode7 = (PComandoOpLista)nodeArrayList6.get(0);
        psenaocomandoNode8 = (PSenaoComando)nodeArrayList7.get(0);
        tfimseNode9 = (TFimse)nodeArrayList8.get(0);
        tpontovirgulaNode10 = (TPontovirgula)nodeArrayList9.get(0);

        pcomandoNode1 = new ASeComando(tseNode2, tabreparenteseNode3, pexpNode4, tfechaparenteseNode5, tentaoNode6, pcomandooplistaNode7, psenaocomandoNode8, tfimseNode9, tpontovirgulaNode10);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AAavaliecomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAbreparentese tabreparenteseNode3;
        PExp pexpNode4;
        TFechaparentese tfechaparenteseNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        TFimavalie tfimavalieNode8;
        TPontovirgula tpontovirgulaNode9;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreparentese)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaparentese)nodeArrayList4.get(0);
        tfimavalieNode8 = (TFimavalie)nodeArrayList5.get(0);
        tpontovirgulaNode9 = (TPontovirgula)nodeArrayList6.get(0);

        pcomandoNode1 = new AAvalieComando(tavalieNode2, tabreparenteseNode3, pexpNode4, tfechaparenteseNode5, null, null, tfimavalieNode8, tpontovirgulaNode9);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AAavaliecomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAbreparentese tabreparenteseNode3;
        PExp pexpNode4;
        TFechaparentese tfechaparenteseNode5;
        PCasoValorLista pcasovalorlistaNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        TFimavalie tfimavalieNode8;
        TPontovirgula tpontovirgulaNode9;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreparentese)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaparentese)nodeArrayList4.get(0);
        pcasovalorlistaNode6 = (PCasoValorLista)nodeArrayList5.get(0);
        tfimavalieNode8 = (TFimavalie)nodeArrayList6.get(0);
        tpontovirgulaNode9 = (TPontovirgula)nodeArrayList7.get(0);

        pcomandoNode1 = new AAvalieComando(tavalieNode2, tabreparenteseNode3, pexpNode4, tfechaparenteseNode5, pcasovalorlistaNode6, null, tfimavalieNode8, tpontovirgulaNode9);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AAavaliecomando3Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAbreparentese tabreparenteseNode3;
        PExp pexpNode4;
        TFechaparentese tfechaparenteseNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PSenaoDoispontos psenaodoispontosNode7;
        TFimavalie tfimavalieNode8;
        TPontovirgula tpontovirgulaNode9;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreparentese)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaparentese)nodeArrayList4.get(0);
        psenaodoispontosNode7 = (PSenaoDoispontos)nodeArrayList5.get(0);
        tfimavalieNode8 = (TFimavalie)nodeArrayList6.get(0);
        tpontovirgulaNode9 = (TPontovirgula)nodeArrayList7.get(0);

        pcomandoNode1 = new AAvalieComando(tavalieNode2, tabreparenteseNode3, pexpNode4, tfechaparenteseNode5, null, psenaodoispontosNode7, tfimavalieNode8, tpontovirgulaNode9);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AAavaliecomando4Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAbreparentese tabreparenteseNode3;
        PExp pexpNode4;
        TFechaparentese tfechaparenteseNode5;
        PCasoValorLista pcasovalorlistaNode6;
        PSenaoDoispontos psenaodoispontosNode7;
        TFimavalie tfimavalieNode8;
        TPontovirgula tpontovirgulaNode9;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreparentese)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaparentese)nodeArrayList4.get(0);
        pcasovalorlistaNode6 = (PCasoValorLista)nodeArrayList5.get(0);
        psenaodoispontosNode7 = (PSenaoDoispontos)nodeArrayList6.get(0);
        tfimavalieNode8 = (TFimavalie)nodeArrayList7.get(0);
        tpontovirgulaNode9 = (TPontovirgula)nodeArrayList8.get(0);

        pcomandoNode1 = new AAvalieComando(tavalieNode2, tabreparenteseNode3, pexpNode4, tfechaparenteseNode5, pcasovalorlistaNode6, psenaodoispontosNode7, tfimavalieNode8, tpontovirgulaNode9);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AEnquantoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TAbreparentese tabreparenteseNode3;
        PExp pexpNode4;
        TFechaparentese tfechaparenteseNode5;
        TFaca tfacaNode6;
        PComandoOpLista pcomandooplistaNode7;
        TFimenquanto tfimenquantoNode8;
        TPontovirgula tpontovirgulaNode9;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreparentese)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaparentese)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        pcomandooplistaNode7 = (PComandoOpLista)nodeArrayList6.get(0);
        tfimenquantoNode8 = (TFimenquanto)nodeArrayList7.get(0);
        tpontovirgulaNode9 = (TPontovirgula)nodeArrayList8.get(0);

        pcomandoNode1 = new AEnquantoComando(tenquantoNode2, tabreparenteseNode3, pexpNode4, tfechaparenteseNode5, tfacaNode6, pcomandooplistaNode7, tfimenquantoNode8, tpontovirgulaNode9);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce ARepitaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TRepita trepitaNode2;
        PComandoOpLista pcomandooplistaNode3;
        TAte tateNode4;
        TAbreparentese tabreparenteseNode5;
        PExp pexpNode6;
        TFechaparentese tfechaparenteseNode7;
        TPontovirgula tpontovirgulaNode8;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        pcomandooplistaNode3 = (PComandoOpLista)nodeArrayList2.get(0);
        tateNode4 = (TAte)nodeArrayList3.get(0);
        tabreparenteseNode5 = (TAbreparentese)nodeArrayList4.get(0);
        pexpNode6 = (PExp)nodeArrayList5.get(0);
        tfechaparenteseNode7 = (TFechaparentese)nodeArrayList6.get(0);
        tpontovirgulaNode8 = (TPontovirgula)nodeArrayList7.get(0);

        pcomandoNode1 = new ARepitaComando(trepitaNode2, pcomandooplistaNode3, tateNode4, tabreparenteseNode5, pexpNode6, tfechaparenteseNode7, tpontovirgulaNode8);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AParaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PParaInicio pparainicioNode2;
        PParaFim pparafimNode3;
        pparainicioNode2 = (PParaInicio)nodeArrayList1.get(0);
        pparafimNode3 = (PParaFim)nodeArrayList2.get(0);

        pcomandoNode1 = new AParaComando(pparainicioNode2, pparafimNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce APassoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PParaInicio pparainicioNode2;
        TPasso tpassoNode3;
        TNInteiro tninteiroNode4;
        PParaFim pparafimNode5;
        pparainicioNode2 = (PParaInicio)nodeArrayList1.get(0);
        tpassoNode3 = (TPasso)nodeArrayList2.get(0);
        tninteiroNode4 = (TNInteiro)nodeArrayList3.get(0);
        pparafimNode5 = (PParaFim)nodeArrayList4.get(0);

        pcomandoNode1 = new APassoComando(pparainicioNode2, tpassoNode3, tninteiroNode4, pparafimNode5);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AListaComandoOpLista */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoOpLista pcomandooplistaNode1;
        {
            // Block
        PComandoOpLista pcomandooplistaNode2;
        PComando pcomandoNode3;
        pcomandooplistaNode2 = (PComandoOpLista)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);

        pcomandooplistaNode1 = new AListaComandoOpLista(pcomandooplistaNode2, pcomandoNode3);
        }
	nodeList.add(pcomandooplistaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AComandoComandoOpLista */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoOpLista pcomandooplistaNode1;
        {
            // Block
        PComando pcomandoNode2;
        pcomandoNode2 = (PComando)nodeArrayList1.get(0);

        pcomandooplistaNode1 = new AComandoComandoOpLista(pcomandoNode2);
        }
	nodeList.add(pcomandooplistaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce ASenaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSenaoComando psenaocomandoNode1;
        {
            // Block
        TSenao tsenaoNode2;
        PComandoOpLista pcomandooplistaNode3;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        pcomandooplistaNode3 = (PComandoOpLista)nodeArrayList2.get(0);

        psenaocomandoNode1 = new ASenaoComando(tsenaoNode2, pcomandooplistaNode3);
        }
	nodeList.add(psenaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce ASenaoDoispontos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSenaoDoispontos psenaodoispontosNode1;
        {
            // Block
        TSenao tsenaoNode2;
        TDoispontos tdoispontosNode3;
        PComandoOpLista pcomandooplistaNode4;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoispontos)nodeArrayList2.get(0);
        pcomandooplistaNode4 = (PComandoOpLista)nodeArrayList3.get(0);

        psenaodoispontosNode1 = new ASenaoDoispontos(tsenaoNode2, tdoispontosNode3, pcomandooplistaNode4);
        }
	nodeList.add(psenaodoispontosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce ACasoValorListaCasoValorLista */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCasoValorLista pcasovalorlistaNode1;
        {
            // Block
        PCasoValorLista pcasovalorlistaNode2;
        PCasoValor pcasovalorNode3;
        pcasovalorlistaNode2 = (PCasoValorLista)nodeArrayList1.get(0);
        pcasovalorNode3 = (PCasoValor)nodeArrayList2.get(0);

        pcasovalorlistaNode1 = new ACasoValorListaCasoValorLista(pcasovalorlistaNode2, pcasovalorNode3);
        }
	nodeList.add(pcasovalorlistaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce ACasoValorCasoValorLista */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCasoValorLista pcasovalorlistaNode1;
        {
            // Block
        PCasoValor pcasovalorNode2;
        pcasovalorNode2 = (PCasoValor)nodeArrayList1.get(0);

        pcasovalorlistaNode1 = new ACasoValorCasoValorLista(pcasovalorNode2);
        }
	nodeList.add(pcasovalorlistaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce ACasoValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCasoValor pcasovalorNode1;
        {
            // Block
        TCaso tcasoNode2;
        PValor pvalorNode3;
        TDoispontos tdoispontosNode4;
        PComandoOpLista pcomandooplistaNode5;
        tcasoNode2 = (TCaso)nodeArrayList1.get(0);
        pvalorNode3 = (PValor)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoispontos)nodeArrayList3.get(0);
        pcomandooplistaNode5 = (PComandoOpLista)nodeArrayList4.get(0);

        pcasovalorNode1 = new ACasoValor(tcasoNode2, pvalorNode3, tdoispontosNode4, pcomandooplistaNode5);
        }
	nodeList.add(pcasovalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AParaInicio */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParaInicio pparainicioNode1;
        {
            // Block
        TPara tparaNode2;
        PVar pvarNode3;
        TDe tdeNode4;
        TNInteiro tninteiroNode5;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tninteiroNode5 = (TNInteiro)nodeArrayList4.get(0);

        pparainicioNode1 = new AParaInicio(tparaNode2, pvarNode3, tdeNode4, tninteiroNode5);
        }
	nodeList.add(pparainicioNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AParaFim */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParaFim pparafimNode1;
        {
            // Block
        TAte tateNode2;
        TNInteiro tninteiroNode3;
        TFaca tfacaNode4;
        PComandoOpLista pcomandooplistaNode5;
        TFimpara tfimparaNode6;
        TPontovirgula tpontovirgulaNode7;
        tateNode2 = (TAte)nodeArrayList1.get(0);
        tninteiroNode3 = (TNInteiro)nodeArrayList2.get(0);
        tfacaNode4 = (TFaca)nodeArrayList3.get(0);
        pcomandooplistaNode5 = (PComandoOpLista)nodeArrayList4.get(0);
        tfimparaNode6 = (TFimpara)nodeArrayList5.get(0);
        tpontovirgulaNode7 = (TPontovirgula)nodeArrayList6.get(0);

        pparafimNode1 = new AParaFim(tateNode2, tninteiroNode3, tfacaNode4, pcomandooplistaNode5, tfimparaNode6, tpontovirgulaNode7);
        }
	nodeList.add(pparafimNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AListaExpViruglaLista */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpViruglaLista pexpviruglalistaNode1;
        {
            // Block
        PExpViruglaLista pexpviruglalistaNode2;
        PExpVirgula pexpvirgulaNode3;
        pexpviruglalistaNode2 = (PExpViruglaLista)nodeArrayList1.get(0);
        pexpvirgulaNode3 = (PExpVirgula)nodeArrayList2.get(0);

        pexpviruglalistaNode1 = new AListaExpViruglaLista(pexpviruglalistaNode2, pexpvirgulaNode3);
        }
	nodeList.add(pexpviruglalistaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AExpVirgulaExpViruglaLista */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpViruglaLista pexpviruglalistaNode1;
        {
            // Block
        PExpVirgula pexpvirgulaNode2;
        pexpvirgulaNode2 = (PExpVirgula)nodeArrayList1.get(0);

        pexpviruglalistaNode1 = new AExpVirgulaExpViruglaLista(pexpvirgulaNode2);
        }
	nodeList.add(pexpviruglalistaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AExpVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpVirgula pexpvirgulaNode1;
        {
            // Block
        PExp pexpNode2;
        TVirgula tvirgulaNode3;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);

        pexpvirgulaNode1 = new AExpVirgula(pexpNode2, tvirgulaNode3);
        }
	nodeList.add(pexpvirgulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PLogicaOu plogicaouNode2;
        plogicaouNode2 = (PLogicaOu)nodeArrayList1.get(0);

        pexpNode1 = new AExp(plogicaouNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce ASomaSomaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSomaExp psomaexpNode1;
        {
            // Block
        PSomaExp psomaexpNode2;
        PSoma psomaNode3;
        PTermo ptermoNode4;
        psomaexpNode2 = (PSomaExp)nodeArrayList1.get(0);
        psomaNode3 = (PSoma)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        psomaexpNode1 = new ASomaSomaExp(psomaexpNode2, psomaNode3, ptermoNode4);
        }
	nodeList.add(psomaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AProxSomaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSomaExp psomaexpNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        psomaexpNode1 = new AProxSomaExp(ptermoNode2);
        }
	nodeList.add(psomaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AMultTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        PMult pmultNode3;
        PNegar pnegarNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        pmultNode3 = (PMult)nodeArrayList2.get(0);
        pnegarNode4 = (PNegar)nodeArrayList3.get(0);

        ptermoNode1 = new AMultTermo(ptermoNode2, pmultNode3, pnegarNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AProxTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PNegar pnegarNode2;
        pnegarNode2 = (PNegar)nodeArrayList1.get(0);

        ptermoNode1 = new AProxTermo(pnegarNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce ANegNegar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNegar pnegarNode1;
        {
            // Block
        TNegacao tnegacaoNode2;
        PNegar pnegarNode3;
        tnegacaoNode2 = (TNegacao)nodeArrayList1.get(0);
        pnegarNode3 = (PNegar)nodeArrayList2.get(0);

        pnegarNode1 = new ANegNegar(tnegacaoNode2, pnegarNode3);
        }
	nodeList.add(pnegarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AFatorexpNegar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNegar pnegarNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        pnegarNode1 = new AFatorexpNegar(pfatorNode2);
        }
	nodeList.add(pnegarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AExpFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TAbreparentese tabreparenteseNode2;
        PExp pexpNode3;
        TFechaparentese tfechaparenteseNode4;
        tabreparenteseNode2 = (TAbreparentese)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tfechaparenteseNode4 = (TFechaparentese)nodeArrayList3.get(0);

        pfatorNode1 = new AExpFator(tabreparenteseNode2, pexpNode3, tfechaparenteseNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AValorFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pfatorNode1 = new AValorFator(pvalorNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AVarFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PVar pvarNode2;
        pvarNode2 = (PVar)nodeArrayList1.get(0);

        pfatorNode1 = new AVarFator(pvarNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce ALogXorLogicaOu */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLogicaOu plogicaouNode1;
        {
            // Block
        PLogicaXor plogicaxorNode2;
        plogicaxorNode2 = (PLogicaXor)nodeArrayList1.get(0);

        plogicaouNode1 = new ALogXorLogicaOu(plogicaxorNode2);
        }
	nodeList.add(plogicaouNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce ALogOuLogicaOu */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLogicaOu plogicaouNode1;
        {
            // Block
        PLogicaOu plogicaouNode2;
        TOu touNode3;
        PLogicaXor plogicaxorNode4;
        plogicaouNode2 = (PLogicaOu)nodeArrayList1.get(0);
        touNode3 = (TOu)nodeArrayList2.get(0);
        plogicaxorNode4 = (PLogicaXor)nodeArrayList3.get(0);

        plogicaouNode1 = new ALogOuLogicaOu(plogicaouNode2, touNode3, plogicaxorNode4);
        }
	nodeList.add(plogicaouNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce ALogELogicaXor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLogicaXor plogicaxorNode1;
        {
            // Block
        PLogicaE plogicaeNode2;
        plogicaeNode2 = (PLogicaE)nodeArrayList1.get(0);

        plogicaxorNode1 = new ALogELogicaXor(plogicaeNode2);
        }
	nodeList.add(plogicaxorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce ALogXorLogicaXor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLogicaXor plogicaxorNode1;
        {
            // Block
        PLogicaXor plogicaxorNode2;
        TXor txorNode3;
        PLogicaE plogicaeNode4;
        plogicaxorNode2 = (PLogicaXor)nodeArrayList1.get(0);
        txorNode3 = (TXor)nodeArrayList2.get(0);
        plogicaeNode4 = (PLogicaE)nodeArrayList3.get(0);

        plogicaxorNode1 = new ALogXorLogicaXor(plogicaxorNode2, txorNode3, plogicaeNode4);
        }
	nodeList.add(plogicaxorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce ALogIgualdadeLogicaE */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLogicaE plogicaeNode1;
        {
            // Block
        PLogicaIgualdade plogicaigualdadeNode2;
        plogicaigualdadeNode2 = (PLogicaIgualdade)nodeArrayList1.get(0);

        plogicaeNode1 = new ALogIgualdadeLogicaE(plogicaigualdadeNode2);
        }
	nodeList.add(plogicaeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce ALogELogicaE */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLogicaE plogicaeNode1;
        {
            // Block
        PLogicaE plogicaeNode2;
        TE teNode3;
        PLogicaIgualdade plogicaigualdadeNode4;
        plogicaeNode2 = (PLogicaE)nodeArrayList1.get(0);
        teNode3 = (TE)nodeArrayList2.get(0);
        plogicaigualdadeNode4 = (PLogicaIgualdade)nodeArrayList3.get(0);

        plogicaeNode1 = new ALogELogicaE(plogicaeNode2, teNode3, plogicaigualdadeNode4);
        }
	nodeList.add(plogicaeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce ALogmaiorLogicaIgualdade */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLogicaIgualdade plogicaigualdadeNode1;
        {
            // Block
        PLogicaMaior plogicamaiorNode2;
        plogicamaiorNode2 = (PLogicaMaior)nodeArrayList1.get(0);

        plogicaigualdadeNode1 = new ALogmaiorLogicaIgualdade(plogicamaiorNode2);
        }
	nodeList.add(plogicaigualdadeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce ALogigualLogicaIgualdade */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLogicaIgualdade plogicaigualdadeNode1;
        {
            // Block
        PLogicaIgualdade plogicaigualdadeNode2;
        PIgualdade pigualdadeNode3;
        PLogicaMaior plogicamaiorNode4;
        plogicaigualdadeNode2 = (PLogicaIgualdade)nodeArrayList1.get(0);
        pigualdadeNode3 = (PIgualdade)nodeArrayList2.get(0);
        plogicamaiorNode4 = (PLogicaMaior)nodeArrayList3.get(0);

        plogicaigualdadeNode1 = new ALogigualLogicaIgualdade(plogicaigualdadeNode2, pigualdadeNode3, plogicamaiorNode4);
        }
	nodeList.add(plogicaigualdadeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce ALogmenorLogicaMaior */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLogicaMaior plogicamaiorNode1;
        {
            // Block
        PLogicaMenor plogicamenorNode2;
        plogicamenorNode2 = (PLogicaMenor)nodeArrayList1.get(0);

        plogicamaiorNode1 = new ALogmenorLogicaMaior(plogicamenorNode2);
        }
	nodeList.add(plogicamaiorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce ALogmaiorLogicaMaior */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLogicaMaior plogicamaiorNode1;
        {
            // Block
        PLogicaMaior plogicamaiorNode2;
        PRelacionalMaior prelacionalmaiorNode3;
        PLogicaMenor plogicamenorNode4;
        plogicamaiorNode2 = (PLogicaMaior)nodeArrayList1.get(0);
        prelacionalmaiorNode3 = (PRelacionalMaior)nodeArrayList2.get(0);
        plogicamenorNode4 = (PLogicaMenor)nodeArrayList3.get(0);

        plogicamaiorNode1 = new ALogmaiorLogicaMaior(plogicamaiorNode2, prelacionalmaiorNode3, plogicamenorNode4);
        }
	nodeList.add(plogicamaiorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce ASomaLogicaMenor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLogicaMenor plogicamenorNode1;
        {
            // Block
        PSomaExp psomaexpNode2;
        psomaexpNode2 = (PSomaExp)nodeArrayList1.get(0);

        plogicamenorNode1 = new ASomaLogicaMenor(psomaexpNode2);
        }
	nodeList.add(plogicamenorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce ALogmenorLogicaMenor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLogicaMenor plogicamenorNode1;
        {
            // Block
        PLogicaMenor plogicamenorNode2;
        PRelacionalMenor prelacionalmenorNode3;
        PSomaExp psomaexpNode4;
        plogicamenorNode2 = (PLogicaMenor)nodeArrayList1.get(0);
        prelacionalmenorNode3 = (PRelacionalMenor)nodeArrayList2.get(0);
        psomaexpNode4 = (PSomaExp)nodeArrayList3.get(0);

        plogicamenorNode1 = new ALogmenorLogicaMenor(plogicamenorNode2, prelacionalmenorNode3, psomaexpNode4);
        }
	nodeList.add(plogicamenorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce AMultiplicacaoMult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMult pmultNode1;
        {
            // Block
        TMultiplicacao tmultiplicacaoNode2;
        tmultiplicacaoNode2 = (TMultiplicacao)nodeArrayList1.get(0);

        pmultNode1 = new AMultiplicacaoMult(tmultiplicacaoNode2);
        }
	nodeList.add(pmultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce ADivisaoMult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMult pmultNode1;
        {
            // Block
        TDivisao tdivisaoNode2;
        tdivisaoNode2 = (TDivisao)nodeArrayList1.get(0);

        pmultNode1 = new ADivisaoMult(tdivisaoNode2);
        }
	nodeList.add(pmultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce AAdicaoSoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSoma psomaNode1;
        {
            // Block
        TAdicao tadicaoNode2;
        tadicaoNode2 = (TAdicao)nodeArrayList1.get(0);

        psomaNode1 = new AAdicaoSoma(tadicaoNode2);
        }
	nodeList.add(psomaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce ASubtracaoSoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSoma psomaNode1;
        {
            // Block
        TSubtracao tsubtracaoNode2;
        tsubtracaoNode2 = (TSubtracao)nodeArrayList1.get(0);

        psomaNode1 = new ASubtracaoSoma(tsubtracaoNode2);
        }
	nodeList.add(psomaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce AMenorigualRelacionalMenor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRelacionalMenor prelacionalmenorNode1;
        {
            // Block
        TMenorigual tmenorigualNode2;
        tmenorigualNode2 = (TMenorigual)nodeArrayList1.get(0);

        prelacionalmenorNode1 = new AMenorigualRelacionalMenor(tmenorigualNode2);
        }
	nodeList.add(prelacionalmenorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce AMenorRelacionalMenor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRelacionalMenor prelacionalmenorNode1;
        {
            // Block
        TMenor tmenorNode2;
        tmenorNode2 = (TMenor)nodeArrayList1.get(0);

        prelacionalmenorNode1 = new AMenorRelacionalMenor(tmenorNode2);
        }
	nodeList.add(prelacionalmenorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AMaiorigualRelacionalMaior */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRelacionalMaior prelacionalmaiorNode1;
        {
            // Block
        TMaiorigual tmaiorigualNode2;
        tmaiorigualNode2 = (TMaiorigual)nodeArrayList1.get(0);

        prelacionalmaiorNode1 = new AMaiorigualRelacionalMaior(tmaiorigualNode2);
        }
	nodeList.add(prelacionalmaiorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce AMaiorRelacionalMaior */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRelacionalMaior prelacionalmaiorNode1;
        {
            // Block
        TMaior tmaiorNode2;
        tmaiorNode2 = (TMaior)nodeArrayList1.get(0);

        prelacionalmaiorNode1 = new AMaiorRelacionalMaior(tmaiorNode2);
        }
	nodeList.add(prelacionalmaiorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AIgualIgualdade */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIgualdade pigualdadeNode1;
        {
            // Block
        TIgual tigualNode2;
        tigualNode2 = (TIgual)nodeArrayList1.get(0);

        pigualdadeNode1 = new AIgualIgualdade(tigualNode2);
        }
	nodeList.add(pigualdadeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce ADiferenteIgualdade */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIgualdade pigualdadeNode1;
        {
            // Block
        TDiferente tdiferenteNode2;
        tdiferenteNode2 = (TDiferente)nodeArrayList1.get(0);

        pigualdadeNode1 = new ADiferenteIgualdade(tdiferenteNode2);
        }
	nodeList.add(pigualdadeNode1);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {2, SHIFT, 1}, },
			{{-1, ERROR, 1}, {52, SHIFT, 4}, },
			{{-1, ERROR, 2}, {53, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {4, SHIFT, 5}, {13, SHIFT, 6}, {14, SHIFT, 7}, {15, SHIFT, 8}, {16, SHIFT, 9}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, ERROR, 4}, {3, SHIFT, 25}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 6}, {52, SHIFT, 26}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 14}, },
			{{-1, ERROR, 10}, {10, SHIFT, 27}, },
			{{-1, ERROR, 11}, {10, SHIFT, 28}, },
			{{-1, ERROR, 12}, {10, SHIFT, 29}, },
			{{-1, ERROR, 13}, {10, SHIFT, 30}, },
			{{-1, ERROR, 14}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, ERROR, 15}, {10, SHIFT, 33}, },
			{{-1, ERROR, 16}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 15}, {8, SHIFT, 35}, },
			{{-1, ERROR, 18}, {4, SHIFT, 36}, {13, SHIFT, 6}, {14, SHIFT, 7}, {15, SHIFT, 8}, {16, SHIFT, 9}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, ERROR, 19}, {4, SHIFT, 39}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 6}, },
			{{-1, ERROR, 21}, {5, SHIFT, 41}, },
			{{-1, ERROR, 22}, {12, SHIFT, 42}, },
			{{-1, REDUCE, 8}, },
			{{-1, ERROR, 24}, {35, SHIFT, 43}, {41, SHIFT, 44}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 26}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, },
			{{-1, ERROR, 27}, {52, SHIFT, 17}, },
			{{-1, ERROR, 28}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, ERROR, 29}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, ERROR, 30}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 32}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {33, SHIFT, 14}, {35, SHIFT, 72}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, ERROR, 33}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, ERROR, 34}, {34, SHIFT, 75}, },
			{{-1, ERROR, 35}, {17, SHIFT, 76}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 37}, {4, SHIFT, 77}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 41}, {52, SHIFT, 17}, },
			{{-1, ERROR, 42}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, ERROR, 43}, {17, SHIFT, 81}, },
			{{-1, ERROR, 44}, {17, SHIFT, 82}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 49}, {7, SHIFT, 83}, },
			{{-1, ERROR, 50}, {6, SHIFT, 84}, {11, SHIFT, 85}, },
			{{-1, ERROR, 51}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 18}, },
			{{-1, ERROR, 53}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, ERROR, 54}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 58}, },
			{{-1, ERROR, 57}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 59}, {6, SHIFT, 92}, {11, SHIFT, 93}, },
			{{-1, REDUCE, 70}, {20, SHIFT, 94}, {21, SHIFT, 95}, },
			{{-1, REDUCE, 52}, {22, SHIFT, 97}, {23, SHIFT, 98}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 56}, },
			{{-1, REDUCE, 50}, {43, SHIFT, 100}, },
			{{-1, REDUCE, 60}, {44, SHIFT, 101}, },
			{{-1, REDUCE, 62}, {42, SHIFT, 102}, },
			{{-1, REDUCE, 64}, {45, SHIFT, 103}, {46, SHIFT, 104}, },
			{{-1, REDUCE, 66}, {48, SHIFT, 106}, {50, SHIFT, 107}, },
			{{-1, REDUCE, 68}, {47, SHIFT, 109}, {49, SHIFT, 110}, },
			{{-1, ERROR, 70}, {11, SHIFT, 112}, },
			{{-1, ERROR, 71}, {11, SHIFT, 113}, },
			{{-1, ERROR, 72}, {10, SHIFT, 114}, },
			{{-1, REDUCE, 38}, },
			{{-1, ERROR, 74}, {11, SHIFT, 115}, },
			{{-1, ERROR, 75}, {17, SHIFT, 116}, },
			{{-1, ERROR, 76}, {9, SHIFT, 117}, },
			{{-1, REDUCE, 3}, },
			{{-1, ERROR, 78}, {6, SHIFT, 84}, {7, SHIFT, 118}, },
			{{-1, ERROR, 79}, {52, SHIFT, 17}, },
			{{-1, ERROR, 80}, {7, SHIFT, 120}, },
			{{-1, ERROR, 81}, {32, SHIFT, 121}, },
			{{-1, ERROR, 82}, {35, SHIFT, 43}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 19}, },
			{{-1, ERROR, 85}, {7, SHIFT, 123}, },
			{{-1, ERROR, 86}, {6, SHIFT, 84}, {11, SHIFT, 124}, },
			{{-1, REDUCE, 17}, },
			{{-1, ERROR, 88}, {11, SHIFT, 125}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 47}, },
			{{-1, ERROR, 91}, {6, SHIFT, 92}, {11, SHIFT, 126}, },
			{{-1, REDUCE, 49}, },
			{{-1, ERROR, 93}, {7, SHIFT, 127}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 75}, },
			{{-1, ERROR, 96}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 73}, },
			{{-1, ERROR, 99}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, ERROR, 100}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, ERROR, 101}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, ERROR, 102}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 80}, },
			{{-1, REDUCE, 81}, },
			{{-1, ERROR, 105}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 79}, },
			{{-1, REDUCE, 78}, },
			{{-1, ERROR, 108}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 76}, },
			{{-1, ERROR, 111}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, ERROR, 112}, {27, SHIFT, 136}, },
			{{-1, ERROR, 113}, {32, SHIFT, 137}, },
			{{-1, ERROR, 114}, {10, SHIFT, 53}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, {51, SHIFT, 54}, {52, SHIFT, 17}, },
			{{-1, ERROR, 115}, {28, SHIFT, 139}, {37, SHIFT, 140}, {38, SHIFT, 141}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 9}, },
			{{-1, ERROR, 119}, {6, SHIFT, 84}, {7, SHIFT, 145}, },
			{{-1, REDUCE, 23}, },
			{{-1, ERROR, 121}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 124}, {7, SHIFT, 147}, },
			{{-1, REDUCE, 57}, },
			{{-1, ERROR, 126}, {7, SHIFT, 148}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 51}, {22, SHIFT, 97}, {23, SHIFT, 98}, },
			{{-1, REDUCE, 53}, },
			{{-1, REDUCE, 61}, {44, SHIFT, 101}, },
			{{-1, REDUCE, 63}, {42, SHIFT, 102}, },
			{{-1, REDUCE, 65}, {45, SHIFT, 103}, {46, SHIFT, 104}, },
			{{-1, REDUCE, 67}, {48, SHIFT, 106}, {50, SHIFT, 107}, },
			{{-1, REDUCE, 69}, {47, SHIFT, 109}, {49, SHIFT, 110}, },
			{{-1, REDUCE, 71}, {20, SHIFT, 94}, {21, SHIFT, 95}, },
			{{-1, ERROR, 136}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, ERROR, 137}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, ERROR, 138}, {11, SHIFT, 151}, },
			{{-1, ERROR, 139}, {5, SHIFT, 152}, },
			{{-1, ERROR, 140}, {7, SHIFT, 153}, },
			{{-1, ERROR, 141}, {17, SHIFT, 46}, {18, SHIFT, 47}, {19, SHIFT, 48}, },
			{{-1, ERROR, 142}, {37, SHIFT, 155}, },
			{{-1, ERROR, 143}, {28, SHIFT, 139}, {37, SHIFT, 156}, {38, SHIFT, 141}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 10}, },
			{{-1, ERROR, 146}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {40, SHIFT, 159}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 27}, },
			{{-1, ERROR, 149}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {28, SHIFT, 160}, {29, SHIFT, 161}, {30, SHIFT, 13}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, ERROR, 150}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {31, SHIFT, 163}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, ERROR, 151}, {7, SHIFT, 164}, },
			{{-1, ERROR, 152}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 30}, },
			{{-1, ERROR, 154}, {5, SHIFT, 166}, },
			{{-1, ERROR, 155}, {7, SHIFT, 167}, },
			{{-1, ERROR, 156}, {7, SHIFT, 168}, },
			{{-1, ERROR, 157}, {37, SHIFT, 169}, },
			{{-1, REDUCE, 42}, },
			{{-1, ERROR, 159}, {7, SHIFT, 170}, },
			{{-1, ERROR, 160}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, ERROR, 161}, {7, SHIFT, 172}, },
			{{-1, ERROR, 162}, {29, SHIFT, 173}, },
			{{-1, ERROR, 163}, {7, SHIFT, 174}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 41}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, ERROR, 166}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 32}, },
			{{-1, REDUCE, 31}, },
			{{-1, ERROR, 169}, {7, SHIFT, 176}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 40}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 28}, },
			{{-1, ERROR, 173}, {7, SHIFT, 177}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 44}, {24, SHIFT, 10}, {25, SHIFT, 11}, {26, SHIFT, 12}, {30, SHIFT, 13}, {33, SHIFT, 14}, {36, SHIFT, 15}, {39, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 29}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 3}, },
			{{-1, 18}, },
			{{-1, 19}, {18, 37}, },
			{{-1, 20}, {18, 38}, },
			{{-1, 21}, },
			{{-1, 22}, {16, 34}, {27, 50}, {28, 55}, {29, 55}, {30, 55}, {33, 55}, {41, 78}, {42, 55}, {51, 86}, {53, 55}, {54, 55}, {57, 55}, {79, 119}, {96, 55}, {99, 55}, {100, 55}, {101, 55}, {102, 55}, {105, 55}, {108, 55}, {111, 55}, {114, 55}, },
			{{-1, 51}, {41, 79}, },
			{{-1, 52}, {51, 87}, {79, 87}, },
			{{-1, 56}, {26, 49}, {141, 154}, },
			{{-1, 31}, {3, 23}, {18, 23}, {19, 40}, {32, 73}, {37, 40}, {146, 73}, {149, 73}, {150, 73}, {165, 73}, {171, 73}, {175, 73}, },
			{{-1, 32}, {121, 146}, {136, 149}, {137, 150}, {152, 165}, {160, 171}, {166, 175}, },
			{{-1, 162}, },
			{{-1, 142}, {143, 157}, },
			{{-1, 143}, },
			{{-1, 144}, {143, 158}, },
			{{-1, 24}, },
			{{-1, 45}, {82, 122}, },
			{{-1, 57}, },
			{{-1, 58}, {57, 90}, },
			{{-1, 59}, {29, 70}, {30, 71}, {33, 74}, {42, 80}, {53, 88}, {57, 91}, {114, 138}, },
			{{-1, 60}, {111, 135}, },
			{{-1, 61}, {96, 128}, },
			{{-1, 62}, {54, 89}, {99, 129}, },
			{{-1, 63}, },
			{{-1, 64}, },
			{{-1, 65}, {100, 130}, },
			{{-1, 66}, {101, 131}, },
			{{-1, 67}, {102, 132}, },
			{{-1, 68}, {105, 133}, },
			{{-1, 69}, {108, 134}, },
			{{-1, 99}, },
			{{-1, 96}, },
			{{-1, 111}, },
			{{-1, 108}, },
			{{-1, 105}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: id",
			"expecting: EOF",
			"expecting: 'fim.', 'const', 'inteiro', 'real', 'caractere', 'leia', 'escreva', 'se', 'enquanto', 'repita', 'avalie', 'para', id",
			"expecting: 'inicio'",
			"expecting: ':'",
			"expecting: '('",
			"expecting: 'leia', 'escreva', 'se', 'enquanto', 'repita', 'avalie', 'para', id",
			"expecting: ',', ';', '[', ')', '<-', '+', '-', '*', '/', 'de', 'e', 'ou', 'xor', '=', '<>', '<', '>', '<=', '>='",
			"expecting: 'fim.', 'leia', 'escreva', 'se', 'enquanto', 'repita', 'avalie', 'para', id",
			"expecting: '<-'",
			"expecting: 'ate', 'passo'",
			"expecting: n inteiro, n real, string",
			"expecting: '(', n inteiro, n real, string, 'nao', id",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'fim se', 'enquanto', 'fim enquanto', 'repita', 'ate', 'avalie', 'fim avalie', 'caso', 'para', 'fim para', id",
			"expecting: 'leia', 'escreva', 'se', 'enquanto', 'repita', 'ate', 'avalie', 'para', id",
			"expecting: 'de'",
			"expecting: n inteiro",
			"expecting: 'fim.', 'leia', 'escreva', 'se', 'senao', 'fim se', 'enquanto', 'fim enquanto', 'repita', 'ate', 'avalie', 'fim avalie', 'caso', 'para', 'fim para', id",
			"expecting: ':', ',', ';', ')', '+', '-', '*', '/', 'e', 'ou', 'xor', '=', '<>', '<', '>', '<=', '>='",
			"expecting: ';'",
			"expecting: ',', ')'",
			"expecting: ',', ';', ')', '+', '-', '*', '/', 'e', 'ou', 'xor', '=', '<>', '<', '>', '<=', '>='",
			"expecting: ',', ';', ')', '+', '-', 'e', 'ou', 'xor', '=', '<>', '<', '>', '<=', '>='",
			"expecting: ',', ';', ')', 'ou'",
			"expecting: ',', ';', ')', 'ou', 'xor'",
			"expecting: ',', ';', ')', 'e', 'ou', 'xor'",
			"expecting: ',', ';', ')', 'e', 'ou', 'xor', '=', '<>'",
			"expecting: ',', ';', ')', 'e', 'ou', 'xor', '=', '<>', '>', '>='",
			"expecting: ',', ';', ')', 'e', 'ou', 'xor', '=', '<>', '<', '>', '<=', '>='",
			"expecting: ')'",
			"expecting: ']'",
			"expecting: ',', ';'",
			"expecting: 'faca'",
			"expecting: 'ate'",
			"expecting: 'entao'",
			"expecting: 'senao', 'fim avalie', 'caso'",
			"expecting: ',', ';', ')', '<-', '+', '-', '*', '/', 'de', 'e', 'ou', 'xor', '=', '<>', '<', '>', '<=', '>='",
			"expecting: 'fim avalie'",
			"expecting: 'leia', 'escreva', 'se', 'enquanto', 'repita', 'avalie', 'para', 'fim para', id",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'fim se', 'enquanto', 'repita', 'avalie', 'para', id",
			"expecting: 'leia', 'escreva', 'se', 'enquanto', 'fim enquanto', 'repita', 'avalie', 'para', id",
			"expecting: 'fim se'",
			"expecting: 'leia', 'escreva', 'se', 'enquanto', 'repita', 'avalie', 'fim avalie', 'para', id",
			"expecting: 'leia', 'escreva', 'se', 'fim se', 'enquanto', 'repita', 'avalie', 'para', id",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'enquanto', 'repita', 'avalie', 'fim avalie', 'caso', 'para', id",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 2, 1, 5, 5, 5, 6, 6, 6, 6, 7, 6, 1, 8, 3, 9, 3, 5, 10, 9, 11, 3, 12, 1, 13, 13, 13, 14, 15, 13, 16, 17, 2, 9, 3, 2, 9, 1, 13, 17, 17, 18, 19, 19, 19, 20, 21, 1, 1, 13, 13, 22, 22, 13, 13, 21, 23, 22, 22, 22, 24, 25, 26, 27, 28, 29, 30, 30, 6, 14, 30, 17, 31, 2, 32, 1, 20, 33, 34, 3, 1, 20, 21, 1, 30, 22, 13, 21, 13, 20, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 35, 33, 13, 36, 11, 37, 3, 32, 18, 7, 18, 18, 20, 22, 20, 18, 22, 22, 25, 26, 27, 28, 29, 23, 7, 7, 30, 5, 20, 12, 38, 36, 36, 3, 39, 18, 18, 40, 41, 20, 7, 18, 5, 20, 20, 38, 36, 20, 7, 20, 42, 20, 18, 43, 7, 18, 18, 20, 18, 44, 18, 20, 18, 45, 18, 18, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
