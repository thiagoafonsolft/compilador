/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class ALogOuLogicaOu extends PLogicaOu
{
    private PLogicaOu _logicaOu_;
    private TOu _ou_;
    private PLogicaXor _logicaXor_;

    public ALogOuLogicaOu()
    {
        // Constructor
    }

    public ALogOuLogicaOu(
        @SuppressWarnings("hiding") PLogicaOu _logicaOu_,
        @SuppressWarnings("hiding") TOu _ou_,
        @SuppressWarnings("hiding") PLogicaXor _logicaXor_)
    {
        // Constructor
        setLogicaOu(_logicaOu_);

        setOu(_ou_);

        setLogicaXor(_logicaXor_);

    }

    @Override
    public Object clone()
    {
        return new ALogOuLogicaOu(
            cloneNode(this._logicaOu_),
            cloneNode(this._ou_),
            cloneNode(this._logicaXor_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALogOuLogicaOu(this);
    }

    public PLogicaOu getLogicaOu()
    {
        return this._logicaOu_;
    }

    public void setLogicaOu(PLogicaOu node)
    {
        if(this._logicaOu_ != null)
        {
            this._logicaOu_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._logicaOu_ = node;
    }

    public TOu getOu()
    {
        return this._ou_;
    }

    public void setOu(TOu node)
    {
        if(this._ou_ != null)
        {
            this._ou_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ou_ = node;
    }

    public PLogicaXor getLogicaXor()
    {
        return this._logicaXor_;
    }

    public void setLogicaXor(PLogicaXor node)
    {
        if(this._logicaXor_ != null)
        {
            this._logicaXor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._logicaXor_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._logicaOu_)
            + toString(this._ou_)
            + toString(this._logicaXor_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._logicaOu_ == child)
        {
            this._logicaOu_ = null;
            return;
        }

        if(this._ou_ == child)
        {
            this._ou_ = null;
            return;
        }

        if(this._logicaXor_ == child)
        {
            this._logicaXor_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._logicaOu_ == oldChild)
        {
            setLogicaOu((PLogicaOu) newChild);
            return;
        }

        if(this._ou_ == oldChild)
        {
            setOu((TOu) newChild);
            return;
        }

        if(this._logicaXor_ == oldChild)
        {
            setLogicaXor((PLogicaXor) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
